{
	"info": {
		"_postman_id": "df061f76-764e-409b-b9ea-3855e30c0f6f",
		"name": "api gateway",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13122695"
	},
	"item": [
		{
			"name": "reset",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/auth-service/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth-service",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "logout admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/auth-service/logout",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth-service",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "register user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"{{user1}}\",\r\n    \"fullName\":\"Иванов Иван Иванович\",\r\n    \"email\":\"{{user1}}@mail.com\",\r\n    \"phone\":\"+7 999 999 99 99\",\r\n    \"password\":\"123\",\r\n\t\"roles\":[\"ADMIN\",\"USER\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth-service/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth-service",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/auth-service/users/{{user1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth-service",
						"users",
						"{{user1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "login user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{user1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "123",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/auth-service/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth-service",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response contains {{user1}}@ya.ru\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"user1\")+\"@ya.ru\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{user1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "123",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"{{user1}}@ya.ru\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth-service/users/{{user1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth-service",
						"users",
						"{{user1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/auth-service/logout",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth-service",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "register user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"{{user2}}\",\r\n    \"fullName\":\"Петров Петр Петрович\",\r\n    \"email\":\"{{user2}}@mail.com\",\r\n    \"phone\":\"+7 111 111 11 11\",\r\n    \"password\":\"456\",\r\n    \"roles\":[\"ADMIN\",\"USER\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth-service/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth-service",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "login user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{user2}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "456",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/auth-service/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth-service",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "get ivanov by petrov",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{user2}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "456",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/auth-service/users/{{user1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth-service",
						"users",
						"{{user1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit ivanov by petrov",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{user2}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "456",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/auth-service/users/{{user1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth-service",
						"users",
						"{{user1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/auth-service/logout",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth-service",
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"if (!pm.environment.get(\"user1\")) {\r",
					"    // Генерация случайного значения\r",
					"    let randomValue = Math.floor(Math.random() * 1000);\r",
					"    pm.environment.set(\"user1\", \"user1\"+randomValue);\r",
					"}\r",
					"if (!pm.environment.get(\"user2\")) {\r",
					"    // Генерация случайного значения\r",
					"    let randomValue = Math.floor(Math.random() * 1000);\r",
					"    pm.environment.set(\"user2\", \"user2\"+randomValue);\r",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://arch.homework"
		}
	]
}